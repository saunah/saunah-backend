# This workflow tests the SauNah backend application, generates an image,
# deploys it to ghcr.io and then deploys the application to a kubernetes
# cluster.

name: Build, Test & Deploy SauNah backend

on:
  workflow_dispatch:
  push:

jobs:
  setup:
    name: Setup Configuration Values
    runs-on: ubuntu-latest
    outputs:
      containerTag: ${{ steps.setConfigs.outputs.containerTag }}
      k8sNamespace: ${{ steps.setConfigs.outputs.k8sNamespace }}
      k8sContext: ${{ steps.setConfigs.outputs.k8sContext }}
      k8sBackendValues: ${{ steps.setConfigs.outputs.k8sBackendValues }}
    steps:
    - uses: actions/checkout@v2
    - name: Set Tag Ouput Variable
      id: setConfigs
      run: |
        if [ ${{ github.ref_type }} == "tag" ]
        then
          echo "::set-output name=containerTag::${{ github.ref_name }}"
          echo "::set-output name=k8sNamespace::class-pm4-2022-7-prod"
          echo "::set-output name=k8sContext::init-lab-prod"
          echo "::set-output name=k8sBackendValues::values-prod.yaml"
        else
          echo "::set-output name=containerTag::$(echo ${{ github.sha }} | cut -c 1-7)"
          echo "::set-output name=k8sNamespace::class-pm4-2022-7-staging"
          echo "::set-output name=k8sContext::init-lab-staging"
          echo "::set-output name=k8sBackendValues::values-staging.yaml"
        fi

  build:
    name: Build & Run Tests with Gradle
    runs-on: ubuntu-latest
    needs: [setup]
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'temurin'
    - name: Build and Test with Gradle
      uses: gradle/gradle-build-action@v2.1.4
      with:
        arguments: build
    - name: Echo Version
      run: echo "${{ needs.setup.outputs.containerTag }}"

  container:
    name: Create and Publish Container
    runs-on: ubuntu-latest
    needs: [setup, build]
    if: ${{ github.ref == 'ref/heads/main' }}
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Create Container
        uses: gradle/gradle-build-action@v2.1.4
        with:
          arguments: bootBuildImage --imageName ghcr.io/saunah/saunah-backend:${{ needs.setup.outputs.containerTag }}

      - name: Log in to the Container registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push to Registry
        run: docker push ghcr.io/saunah/saunah-backend:${{ needs.setup.outputs.containerTag }}

  deploy:
    name: Deploy Container to Kubernetes Cluster
    runs-on: ubuntu-latest
    needs: [setup, container]
    if: ${{ github.ref == 'ref/heads/main' }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set k8s Context
        uses: azure/k8s-set-context@v2
        with:
          method: kubeconfig
          kubeconfig: ${{ secrets.K8S_CONFIG }}
          context: ${{ needs.setup.outputs.k8sContext }}

      - name: Bake Backend Helm Config
        uses: azure/k8s-bake@v1
        with:
          renderEngine: 'helm'
          helmChart: './helm/saunah-backend'
          overrideFiles: "./helm/saunah-backend/${{ needs.setup.outputs.k8sBackendValues }}"
          overrides: |
            image.tag:${{ needs.setup.outputs.containerTag }}
          helm-version: 'latest'
          releaseName: saunah-backend
        id: bake

      - name: Output Manifest
        run: cat ${{ steps.bake.outputs.manifestsBundle }}

      - name: Deploy to k8s Cluster
        uses: Azure/k8s-deploy@v1.2
        with:
          action: deploy
          namespace: ${{ needs.setup.outputs.k8sNamespace }}
          manifests: ${{ steps.bake.outputs.manifestsBundle }}
          images: |
            ghcr.io/saunah/saunah-backend:${{ needs.setup.outputs.containerTag }}

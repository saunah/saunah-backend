# This workflow tests the SauNah backend application, generates an image,
# deploys it to ghcr.io and then deploys the application to a kubernetes
# cluster.

name: Build, Test & Deploy SauNah backend

on:
  pull_request:
    branches: [ main ]

jobs:
  setup:
    name: Setup Configuration Values
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set Tag Ouput Variable
      run: |
        if [ ! -z ${{ github.event.pull_request.head.sha }} ]
        then
          echo "::set-output name=containerTag::$(echo ${{ github.event.pull_request.head.sha }} | cut -c 1-7)"
          echo "::set-output name=test::first"
        else
          echo ::set-output name=containerTag::$(echo ${GITHUB_SHA} | cut -c 1-7)
          echo "::set-output name=test::second"
        fi


  build:
    name: Build & Run Tests with Gradle
    runs-on: ubuntu-latest
    needs: [setup]
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'temurin'
    - name: Build and Test with Gradle
      uses: gradle/gradle-build-action@v2.1.4
      with:
        arguments: build
    - name: Echo Version
      run: echo "${{ needs.setup.outputs.test }}"

  container:
    name: Create and Publish Container
    runs-on: ubuntu-latest
    needs: [build]
    if: ${{ github.ref == 'ref/heads/main' }}
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set short SHA
        run: echo "GITHUB_SHA_SHORT=$(echo ${{ github.event.pull_request.head.sha }} | cut -c 1-7)" >> $GITHUB_ENV

      - name: Create Container
        uses: gradle/gradle-build-action@v2.1.4
        with:
          arguments: bootBuildImage --imageName ghcr.io/saunah/saunah-backend:${{ env.GITHUB_SHA_SHORT }}

      - name: Log in to the Container registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push to Registry
        run: docker push ghcr.io/saunah/saunah-backend:${{ env.GITHUB_SHA_SHORT }}

  deploy:
    name: Deploy Container to Kubernetes Cluster
    runs-on: ubuntu-latest
    needs: [container]
    if: ${{ github.ref == 'ref/heads/main' }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set short SHA
        run: echo "GITHUB_SHA_SHORT=$(echo ${{ github.event.pull_request.head.sha }} | cut -c 1-7)" >> $GITHUB_ENV

      - name: Set k8s Context
        uses: azure/k8s-set-context@v2
        with:
          method: kubeconfig
          kubeconfig: ${{ secrets.K8S_CONFIG }}
          context: init-lab-staging

      - name: Bake Backend Helm Config
        uses: azure/k8s-bake@v1
        with:
          renderEngine: 'helm'
          helmChart: './helm/saunah-backend'
          overrideFiles: './helm/saunah-backend/values-staging.yaml'
          overrides: |
            image.tag:${{ env.GITHUB_SHA_SHORT }}
          helm-version: 'latest'
          releaseName: saunah-backend
        id: bake

      - name: Output Manifest
        run: cat ${{ steps.bake.outputs.manifestsBundle }}

      - name: Deploy to k8s Cluster
        uses: Azure/k8s-deploy@v1.2
        with:
          action: deploy
          namespace: class-pm4-2022-7-staging
          manifests: ${{ steps.bake.outputs.manifestsBundle }}
          images: |
            ghcr.io/saunah/saunah-backend:${{ env.GITHUB_SHA_SHORT }}
